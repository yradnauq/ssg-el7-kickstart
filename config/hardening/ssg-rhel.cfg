###############################################################################
# SSG RHEL 7 Kickstart
#
# This script was written by Frank Caviggia, Red Hat Consulting
# Last update was 28 December 2018
# This script is NOT SUPPORTED by Red Hat Global Support Services.
#
# Author: Frank Caviggia (fcaviggia@gmail.com)
# Copyright: Red Hat, (c) 2015
# Version: 1.0
# License: Apache License, Version 2.0
# Description: Installation of Hardened RHEL 7 using SSG
###############################################################################


###############################################################################
# Kickstart Configuration
###############################################################################
install
cdrom
lang en_US.UTF-8
keyboard us
text
firewall --service=ssh
authconfig --enableshadow --passalgo=sha512
selinux --enforcing
firstboot --disable
timezone --utc America/New_York

# Include hardening with kickstart options
%include /tmp/hardening
%include /tmp/partitioning
%include /tmp/networking

###############################################################################
# Package Selection
###############################################################################
%packages
# MINIMUM
@core
dracut-fips
fipscheck
logwatch
scrub
aide
vlock
screen
chrony
libreswan
rsyslog
gnupg2
yum-utils
tpm-tools
trousers
which
unzip
bzip2
zip
deltarpm
prelink
# SmartCard
pam_pkcs11
pcsc-lite
ccid
coolkey
# SCAP CONTENT
openscap
openscap-utils
xml-common
# OPTIONAL
mutt
openssh-clients
cryptsetup-luks
krb5-libs
krb5-workstation
pam_krb5
virt-what
dos2unix
unix2dos
xz
# REMOVE PACKAGES
-abrt*
-avahi*
-iwl*
-ivtv-firmware
# ADDITIONAL PACKAGE SELECTION
%include /tmp/hardening-packages
%end

###############################################################################
# Pre-Installation Scripts
###############################################################################
%pre
#!/bin/bash

# Create Configurations
/bin/touch /tmp/hardening
/bin/touch /tmp/partitioning
/bin/touch /tmp/networking
/bin/touch /tmp/hardening-packages
/bin/touch /tmp/hardening-post
/bin/touch /tmp/hardening-post-nochroot
/bin/touch /tmp/classification-banner

# Launch XWindows and menu.py to configure system
/usr/bin/Xorg -br :0 &
/usr/bin/metacity --display :0 --sm-disable &
export DISPLAY=:0
/usr/bin/python /run/install/repo/hardening/menu.py
unset DISPLAY
killall metacity
killall Xorg

%end

###############################################################################
# Post-Installation Scripts (nochroot)
###############################################################################
%post --nochroot
#!/bin/bash

# Create Directory
mkdir -p /mnt/sysimage/root/hardening

# Copy Red Hat GPG Key
cp /run/install/repo/RPM-GPG-KEY-redhat-release /mnt/sysimage/root/hardening/

# Copy Shell Scripts from Install media to root
cp /run/install/repo/hardening/*sh /mnt/sysimage/root/hardening/
cp /run/install/repo/hardening/*rpm /mnt/sysimage/root/hardening/

# Classification Banner Configuration
cp /run/install/repo/hardening/classification-banner.py /mnt/sysimage/usr/local/bin/
cp /tmp/classification-banner /mnt/sysimage/etc/classification-banner
chmod 555 /mnt/sysimage/usr/local/bin/classification-banner.py

###############################################################################
# Custom Post-Installation Scripts (nochroot)
###############################################################################
%include /tmp/hardening-post-nochroot

%end

###############################################################################
# Post-Installation Scripts
###############################################################################
%post
#!/bin/bash

# Install Red Hat GPG Key
rpm --import /root/hardening/RPM-GPG-KEY-redhat-release

# Install Hardening Script
yum localinstall -y /root/hardening/*cap-*.rpm

# Install USB Guard
yum localinstall -y /root/hardening/protobuf*rpm
yum localinstall -y /root/hardening/libqb*rpm
yum localinstall -y /root/hardening/usbguard-*.rpm
systemctl enable usbguard.service

# Disable Bluetooth Service
systemctl mask bluetooth.service

###############################################################################
# Custom Post-Installation Scripts - Hardening script now called in menu.py
###############################################################################
%include /tmp/hardening-post

###############################################################################
# Additional Hardening Supplemental to SSG
###############################################################################
%include /run/install/repo/hardening/ssg-supplemental.sh

###############################################################################
# Generate SSH Host Keys - Highest Possible Encryption
##############################################################################
ssh-keygen -b 4096 -t rsa -N "" -f /etc/ssh/ssh_host_rsa_key
ssh-keygen -b 1024 -t dsa -N "" -f /etc/ssh/ssh_host_dsa_key
ssh-keygen -b 521 -t ecdsa -N "" -f /etc/ssh/ssh_host_ecdsa_key

# Fix grub.cfg permissions
chmod 600 /boot/grub2/grub2.cfg

# SSG TMOUT Fix (set in /etc/profile.d/autologout.{sh,csh})
/usr/bin/sed -i '/TMOUT/d' /etc/profile

# SSG SSH Fix
/usr/bin/sed -i 's/sha1Cipher/sha1\nCipher/' /etc/ssh/sshd_config
/usr/bin/sed -i 's/sha1Protocol/sha1\nProtocol/' /etc/ssh/sshd_config

# Create Repository for Local Patching
cat << EOF > /etc/yum.repos.d/rhel-dvd.repo
[rhel-dvd]
name=Red Hat Enterprise Linux - DVD
baseurl=file:///mnt/sr0/
enabled=0
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
EOF

# Add Classification Banner (Graphical)
if [[ -d /etc/xdg/autostart/ ]]; then
cat << EOF > /etc/xdg/autostart/classification-banner.desktop
[Desktop Entry]
Name=Classification Banner
Exec=/usr/local/bin/classification-banner.py
Comment=User Notification for Security Level of System.
Type=Application
Encoding=UTF-8
Version=1.0
MimeType=application/python;
Categories=Utility;
X-GNOME-Autostart-enabled=true
StartupNotify=false
Terminal=false
EOF
fi

# Clean Up
rm -rf /root/hardening

# rc.local
chmod +x /etc/rc.local

cat << EOF >> /root/clean_up.sh
#!/bin/bash
########################################
# Delete Anaconda Kickstart
########################################
rm -f /root/*ks.cfg

########################################
# Disable Pre-Linking
# CCE-27078-5
########################################
/usr/bin/sed -i 's/PRELINKING.*/PRELINKING=no/g' /etc/sysconfig/prelink
/bin/chattr +i /etc/sysconfig/prelink
/usr/sbin/prelink -ua &> /dev/null

# Ensure SSHD Host Keys
chmod 0600 /etc/ssh/*_key

/usr/bin/sed -i '/clean_up.sh/d' /etc/rc.local
rm -f /root/clean_up.sh

exit 0

EOF
chmod 500 /root/clean_up.sh
echo "/root/clean_up.sh" >> /etc/rc.local
cat << EOF >> /etc/rc.local
########################################
# Disable Radios (wifi, wimax, wwwan)
# NIST 800-53: SC-40, AC-18
########################################
nmcli radio all off

EOF

# SCAP Compliance Report
cat << EOF >> /root/scap_generate_report.sh
#!/bin/bash
########################################
# Create SSG Compliance Report
########################################
oscap xccdf eval --profile stig-rhel7-disa --results $(hostname)-scap-report-\$(date +%Y%m%d).xml --report \$(hostname)-scap-report-\$(date +%Y%m%d).html --cpe /usr/share/xml/scap/ssg/content/ssg-rhel7-cpe-dictionary.xml /usr/share/xml/scap/ssg/content/ssg-rhel7-xccdf.xml

exit 0

EOF
chmod 500 /root/scap_generate_report.sh

# SCAP Redmediation Script
cat << EOF >> /root/scap_remediate_system.sh
#!/bin/bash
########################################
# SCAP Security Guide Remediation Script
########################################

# Variable Initialization
FIPS=0
NOUSB=0

# Check for FIPS mode Kernel option
if [ \$(grep -c 'fips' /etc/default/grub) -gt 0 ]; then
	FIPS=1	
fi
# Check for nousb Kernel option
if [ \$(grep -c 'nousb' /etc/default/grub) -gt 0 ]; then
	NOUSB=1	
fi
oscap xccdf eval --profile stig-rhel7-disa --results \$(hostname)-scap-remediation-report-\$(date +%Y%m%d).xml --remediate --cpe /usr/share/xml/scap/ssg/content/ssg-rhel7-cpe-dictionary.xml /usr/share/xml/scap/ssg/content/ssg-rhel7-xccdf.xml

if [ \$NOUSB -eq 0 ]; then
	grubby --update-kernel=ALL --remove-args='nousb'
	/usr/bin/sed -i 's/ nousb//' /etc/default/grub
fi
if [ \$FIPS -eq 0 ]; then
	grubby --update-kernel=ALL --remove-args='fips=1'
	/usr/bin/sed -i 's/ fips=1//' /etc/default/grub
fi

# Remove TMOUT variable (set in /etc/profile.d/autologout.{sh,csh})
/usr/bin/sed -i '/TMOUT/d' /etc/profile

exit 0

EOF
chmod 500 /root/scap_remediate_system.sh Â 

# Clean Yum
yum clean all &> /dev/null


########################################
# AIDE Initialization
########################################
#FIPS MODE AIDE CONFIGURATION
/usr/bin/sed -i -e 's/^FIPSR.*/FIPSR = p+i+n+u+g+s+m+c+acl+selinux+xattrs+sha256/' -e 's/^NORMAL.*/NORMAL = FIPSR+sha512/' /etc/aide.conf
# AIDE Initialization
echo "Initializing AIDE database, this step may take quite a while!"
/usr/sbin/aide --init &> /dev/null
echo "AIDE database initialization complete."
cp /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz
# Weekly Reports
cat <<EOF > /etc/cron.weekly/aide-report
#!/bin/sh
# Generate Weekly AIDE Report
\`/usr/sbin/aide --check | tee -a /var/log/aide/reports/\$(hostname)-aide-report-\$(date +%Y%m%d).txt | /bin/mail -s "\$(hostname) - AIDE Integrity Check" root@localhost\`
EOF
chown root:root /etc/cron.weekly/aide-report
chmod 555 /etc/cron.weekly/aide-report
mkdir -p /var/log/aide/reports
chmod 700 /var/log/aide/reports

%end
